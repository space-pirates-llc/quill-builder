#!/usr/bin/env ruby
# vim: filetype=ruby
$: << File.expand_path('../../lib/', __FILE__)

require 'socket'
require 'quill/builder/html'

class QuillBuilderTest
  def initialize
    server = TCPServer.new 1916
    loop do
      client = server.accept
      headers = []
      until (header = client.gets.chomp).empty?
        headers << header
      end
      body = nil
      begin
        body = client.read_nonblock(16677216)
      rescue IO::WaitReadable
      end

      if headers.first.upcase.start_with?('GET')
        client.puts toppage
      elsif headers.first.upcase.start_with?('POST')
        builder = Quill::Builder::HTML.new(body)
        client.puts response(builder.convert)
      else
      end
      client.close
    end
  end

  def response(body)
    <<-RESPONSE
HTTP/1.0 200 OK
Content-Type: text/html

#{body}
    RESPONSE
  end

  def toppage
    <<-RESPONSE
HTTP/1.0 200 OK
Content-Type: text/html

<!DOCTYPE html>
<html>
<head>
  <link href="//cdn.quilljs.com/1.3.3/quill.snow.css" rel="stylesheet">
  <script src="//cdn.quilljs.com/1.3.3/quill.js" type="text/javascript"></script>
  <style>
    .ql-toolbar {
      width: 400px;
    }
    #editor {
      width: 400px;
      height: 200px;
    }
  </style>
</head>
<body>

<div id="editor"></div>
<button id="save" type="submit">Save</button>

<p id="preview"></p>

<script>
  var quill = new Quill('#editor', {
    modules: {
      toolbar: [
        ['bold', 'italic', 'underline', 'strike'],
        [{ 'color': [] }, { 'background': [] }],
        ['link', 'blockquote', 'code-block', 'image'],
        [{ list: 'ordered' }, { list: 'bullet' }]
      ]
    },
    placeholder: 'Edit...',
    theme: 'snow'
  });
  var button = document.querySelector('button#save');
  button.onclick = function() {
    var xhr = new XMLHttpRequest();
    xhr.onreadystatechange = function() {
      switch (xhr.readyState) {
      case 0:
        console.log('uninitialized!');
        break;
      case 1:
        console.log('loading...');
        break;
      case 2:
        console.log('loaded.');
        break;
      case 3:
        console.log('interactive... ' + xhr.responseText.length + ' bytes.');
        break;
      case 4:
        if (xhr.status == 200 || xhr.status == 304) {
          var data = xhr.responseText;
          console.log('COMPLETE! :' + data);
          var preview = document.querySelector('p#preview');
          preview.innerHTML = data;
        } else {
          console.log('Failed. HttpStatus: ' + xhr.statusText);
        }
        break;
      }
    };
    xhr.open('POST', '/', false);
    xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
    xhr.send(JSON.stringify(quill.getContents()));
    xhr.abort();
  };
</script>

</body>
</html>
    RESPONSE
  end
end

QuillBuilderTest.new
